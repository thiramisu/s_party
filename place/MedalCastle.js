// @ts-check
"use strict";

import { キャラクター } from "../character/Character.js";
import { 交換所 } from "./Shop.js"

/**
 * @typedef {import("../character/Character.js").メンバー} プレイヤー
 */

export class メダル王の城 extends 交換所 {
  constructor(サーバー, チャンネル) {
    super(メダル王の賞品, 1, "どれと交換するんじゃ？", undefined, "こうかん",);
  }

  ヘッダー出力(プレイヤー) {
    const 断片 = document.createDocumentFragment();
    断片.append(
      super._ヘッダー用出力(),
      強調テキスト("メダル ", プレイヤー._小さなメダル.所持, "枚")
    );
    return 断片;
  }

  get 背景画像() { return "medal.gif"; }
  get NPC() { return new キャラクター(this.サーバー, "@ﾒﾀﾞﾙ王", "chr/002.gif"); }

  /**
   * 
   * @param {プレイヤー} プレイヤー 
   */
  _はなす(プレイヤー) {
    super._はなす(
      "わしはメダル王じゃ、小さなメダルを集めておる",
      "小さなメダルを持ってきたら代わりに褒美をやろう",
      "世界中の小さなメダルはわしのもんじゃ！",
      "わしの夢は小さなメダルを山ほど集めてだな…ムニャムニャ…",
      "小さなメダルをよこさんかい！",
      "自分の家で小さなメダルを使うと、わしの所にメダルが届けられるのじゃ",
      "小さなメダルはモンスターの住処の奥深くにあるらしいのじゃ",
      `${プレイヤー.名前}からは小さなメダルを${プレイヤー.小さなメダル.所持}枚あずかっておるぞ`
    );
  }

  /**
   * 
   * @param {プレイヤー} プレイヤー 
   * @param {string} 対象 
   */
  _かう(プレイヤー, 対象) {
    super._かう(プレイヤー, 対象, プレイヤー.小さなメダル);
  }

  _金欠時の通知内容を取得(取引アイテム) { return `小さなメダル${取引アイテム.名前}の賞品と交換するにはメダルが足りないぞ`; }
  _倉庫送信時の会話内容を取得(取引アイテム) { return `メダル${取引アイテム.名前}の賞品と交換するのじゃな！${取引アイテム.アイテム名}は${あなた}の預かり所に送っておいたぞ！`; }

  #賞品一覧;
}
