// @ts-check
"use strict";

import { ステータス, 簡易ステータス } from "../character/Status.js";
import { 整数乱数, 範囲 } from "../Util.js";
import { 取引アイテムインターフェース } from "./ItemInterface.js";
import { アイテム範囲, アイテム名前範囲, アイテム連続 } from "./ItemUtil.js"

export class アイテム extends 取引アイテムインターフェース {
  constructor(名前, 価値) {
    super(名前, 価値);
    this.#ID = アイテム.#自動ID++;
  }

  名前と個数出力(個数) {
    アイテム.名前と個数出力(個数, 空文字列, this.名前);
  }

  こうどう用出力(こうどう名, 末尾にスラッシュをつける = true) {
    const span = document.createElement("span");
    span.textContent = this.名前;
    チャットフォーム.文字列追加イベントを登録(span, `＠${こうどう名}>${this.名前} `);
    if (!末尾にスラッシュをつける) {
      return span;
    }
    const 断片 = document.createDocumentFragment();
    断片.append(span, " / ");
    return 断片;
  }

  get ID() { return this.#ID; }

  static 名前と個数出力(個数, 単位, 名前) {
    const
      全体 = document.createDocumentFragment(),
      _個数 = document.createElement("span");
    _個数.classList.add("強調");
    _個数.textContent = 個数;
    if (名前.nodeType === undefined) {
      名前 = document.createTextNode(名前);
    }
    全体.appendChild(名前, " ", _個数, ` ${単位}`);
    return 全体;
  }

  static 図鑑出力(アイテムリスト, テーブル) {
    テーブル.textContent = 空文字列;
    const
      tHead = document.createElement("thead"),
      tBody = document.createElement("tbody");
    let 最初 = true;
    for (const アイテム of アイテムリスト) {
      if (最初) {
        最初 = false;
        tHead.appendChild(テーブル行出力(this._図鑑用ヘッダー項目名リスト, undefined, true));
        テーブル.appendChild(tHead);
      }
      tBody.appendChild(アイテム._図鑑用出力());
    }
    テーブル.appendChild(tBody);
  }

  static 範囲(アイテム名から, アイテム名まで, ID増加量 = 0, ID最大増加時のアイテム名) {
    const IDまで = this.一覧(アイテム名まで).ID + ID増加量;
    return new アイテム範囲(
      this.一覧(アイテム名から).ID,
      (ID最大増加時のアイテム名 === undefined) ? IDまで
        : Math.min(IDまで, this.一覧(ID最大増加時のアイテム名).ID)
    );
  }

  static 名前範囲(アイテム名から, アイテム名まで, ID増加量 = 0, ID最大増加時のアイテム名) {
    return new アイテム名前範囲(this.一覧(アイテム名から).ID, this.一覧(アイテム名まで).ID);
  }

  static 連続(アイテム名, 数) {
    return new アイテム連続(this.一覧(アイテム名).ID, 数);
  }

  static 初期化() {
    アイテム.#IDから = new Map();
    this.#一覧 = new Map([
      new アイテム("なし"),

      // ＠説明書は(主に上限か下限に0を含む範囲について)境界を含むかどうかで間違いがあるので信用してはならない
      new 武器("ひのきの棒", 10, 2, new 範囲(1)),
      new 武器("竹の槍", 30, 4, 2),
      new 武器("こんぼう", 50, new 範囲(16, 0, 8), 6),
      new 武器("かしの杖", 70, 6, new 範囲(4)),
      new 武器("いばらのむち", 180, new 範囲(14), 5),
      new 武器("ﾌﾞﾛﾝｽﾞﾅｲﾌ", 120, 9, new 範囲(6)),
      new 武器("おおきづち", 250, new 範囲(40, 0, 40), 12),
      new 武器("銅の剣", 400, 14, 9),
      new 武器("鎖がま", 540, new 範囲(23), 10),
      new 武器("聖なるﾅｲﾌ", 670, 18, new 範囲(14)),
      new 武器("鉄の斧", 900, new 範囲(60, 0, 30), 25),
      new 武器("どくばり", 1500, new 範囲(42, 0, 42), 4),
      new 武器("鋼鉄の剣", 1800, 30, 20),
      new 武器("ﾙｰﾝｽﾀｯﾌ", 2100, 27, new 範囲(24)),
      new 武器("ｿﾞﾝﾋﾞｷﾗｰ", 3500, 44, 24),
      new 武器("ﾁｪｰﾝｸﾛｽ", 3700, new 範囲(59), 20),
      new 武器("ｱｻｼﾝﾀﾞｶﾞｰ", 5500, new 範囲(54, 0, 18), 16),
      new 武器("ｸｻﾅｷﾞの剣", 8500, 54, 34),
      new 武器("ﾎｰﾘｰﾗﾝｽ", 7500, 47, new 範囲(49)),
      new 武器("ﾊﾞﾄﾙｱｯｸｽ", 7200, new 範囲(100, 0, 50), 38),
      new 武器("ﾓｰﾆﾝｸﾞｽﾀｰ", 9500, new 範囲(89), 32),
      new 武器("ｳｫｰﾊﾝﾏｰ", 11000, new 範囲(150, 0, 150), 50),
      new 武器("ﾄﾞﾗｺﾞﾝｷﾗｰ", 15000, 75, 45),
      new 武器("妖精の剣", 13000, 65, new 範囲(69)),
      new 武器("ﾃﾞｰﾓﾝｽﾋﾟｱ", 16000, 99, 66),
      new 武器("ﾄﾞﾗｺﾞﾝﾃｲﾙ", 19500, new 範囲(119), 45),
      new 武器("ﾋﾞｯｸﾞﾎﾞｳｶﾞﾝ", 22500, new 範囲(180, 0, 180), 60),
      new 武器("諸刃の剣", 2000, -20, new 範囲(0, -39)),
      new 武器("隼の剣", 21000, 5, new 範囲(0, -39)),
      new 武器("奇跡の剣", 17700, 70, new 範囲(20, 0, 20)),
      new 武器("ｷﾗｰﾋﾟｱｽ", 14000, new 進む人のステータス依存("素早さ", 1.2), new 範囲(49)),
      new 武器("正義のｿﾛﾊﾞﾝ", 18750, new 進む人のステータス依存("守備力", 1.2), 40),
      new 武器("ｶﾞｲｱの剣", 24000, new 進む人のステータス依存("攻撃力", 1.2), 40),
      new 武器("理力の杖", 17000, new 進む人のステータス依存("ＭＰ", 0.6), new 範囲(69)),
      new 武器("天空の剣", 30000, new 進む人のステータス依存("ＨＰ"), 50),
      new 武器("ﾄﾞﾗｺﾞﾝの杖", 22000, 90, new 範囲(99)),
      new 武器("魔人の斧", 20000, new 範囲(300, 0, 300), 70),
      new 武器("ｸﾞﾘﾝｶﾞﾑのむち", 28000, new 範囲(199), 55),
      new 武器("破壊の鉄球", 27750, new 範囲(300, 0, 150), 80),
      new 武器("ﾊｸﾞﾚﾒﾀﾙの剣", 30000, 150, 75),
      new 武器("古びた剣", 10, 1, 30),
      new 武器("鉄の槍", 740, 22, 12),
      new 武器("ﾀﾞｶﾞｰﾅｲﾌ", 300, 14, new 範囲(10)),
      new 武器("おおかなづち", 850, new 範囲(60, 0, 60), 15),
      new 武器("ﾛﾝｸﾞｽﾋﾟｱ", 1100, 31, 19),
      new 武器("ﾊﾞﾄﾙﾌｫｰｸ", 2000, 36, 10),
      new 武器("金の斧", 4000, new 範囲(60, 0, 20), 30),
      new 武器("山賊の斧", 6000, new 範囲(120, 0, 20), 55),
      new 武器("氷の刃", 7400, 52, 26),
      new 武器("吹雪の剣", 17000, 80, 39),
      new 武器("隼の剣･改", 27000, 45, new 範囲(0, -39)),
      new 武器("諸刃の刃･改", 6000, -30, new 範囲(0, -59)),
      new 武器("ｳｫｰﾊﾝﾏｰ･改", 16000, new 範囲(240, 0, 120), 60),
      new 武器("奇跡の剣･改", 21100, 85, new 範囲(10, 0, 10)),
      new 武器("ｿﾞﾝﾋﾞﾊﾞｽﾀｰ", 14000, 65, 45),
      new 武器("ﾄﾞﾗｺﾞﾝｽﾚｲﾔｰ", 20000, 96, 50),
      new 武器("ﾊﾞｽﾀｰﾄﾞｿｰﾄﾞ", 8000, 60, 20),
      new 武器("ﾗｲﾄｼｬﾑｰﾙ", 21000, 110, 55),
      new 武器("ﾌﾟﾗﾁﾅｿｰﾄﾞ", 16000, 84, 40),
      new 武器("ﾒｶﾞﾄﾝﾊﾝﾏｰ", 22000, new 範囲(300, 0, 300), 85),
      new 武器("ﾑｰﾝｱｯｸｽ", 12000, new 範囲(210, 0, 70), 55),
      new 武器("ｷﾝｸﾞｱｯｸｽ", 28000, new 範囲(270, 0, 90), 65),
      new 武器("覇王の斧", 30000, new 範囲(300, 0, 100), 80),
      new 武器("聖銀のﾚｲﾋﾟｱ", 7000, 54, 16),
      new 武器("堕天使のﾚｲﾋﾟｱ", 12000, 61, 11),
      new 武器("疾風のﾚｲﾋﾟｱ", 20000, 78, new 範囲(0, -29)),
      new 武器("ﾒﾀﾙｷﾝｸﾞの剣", 40000, 165, 80),
      new 武器("ﾛﾄの剣", 50000, 180, new 進む人のステータス依存("ＨＰ", 0.2, true)),
      new 武器("竜神の剣", 40000, new 進む人のステータス依存("攻撃力", 1.2), 40),
      new 武器("竜神王の剣", 50000, new 進む人のステータス依存("攻撃力", 1.6), 50),

      new 防具("布の服", 20, 3, 0),
      new 防具("旅人の服", 50, 5, new 範囲(1)),
      new 防具("ｽﾃﾃｺﾊﾟﾝﾂ", 70, -2, new 範囲(0, -11)),
      new 防具("皮の鎧", 150, 12, 4),
      new 防具("皮の腰巻", 240, new 範囲(10), new 範囲(5)),
      new 防具("うろこの鎧", 380, new 範囲(16, 7), 6),
      new 防具("鎖かたびら", 540, 24, 8),
      new 防具("毛皮のﾏﾝﾄ", 350, new 範囲(19), new 範囲(9)),
      new 防具("ｽﾗｲﾑの服", 600, 30, new 範囲(17)),
      new 防具("青銅の鎧", 830, new 範囲(34, 15), 12),
      new 防具("鉄の鎧", 1200, 43, 17),
      new 防具("安らぎのﾛｰﾌﾞ", 1700, 34, new 範囲(19)),
      new 防具("さまよう鎧", 900, new 範囲(90, 0, 90), 22),
      new 防具("みかわしの服", 2800, 0, new 範囲(0, -54)),
      new 防具("ｽﾗｲﾑｱｰﾏｰ", 3000, new 範囲(39, 10), new 範囲(19)),
      new 防具("鋼鉄の鎧", 3700, 52, 20),
      new 防具("ｿﾞﾝﾋﾞﾒｲﾙ", 4400, new 範囲(59, 30), 22),
      new 防具("魔法の法衣", 5400, 45, new 範囲(24)),
      new 防具("銀の胸当て", 6700, 73, 24),
      new 防具("ﾃﾞﾋﾞﾙｱｰﾏｰ", 2000, new 範囲(140, 0, 140), 22),
      new 防具("賢者のﾛｰﾌﾞ", 9000, 62, new 範囲(29)),
      new 防具("刃の鎧", 7000, new 範囲(80, 0, 40), 27),
      new 防具("忍びの服", 16000, new 範囲(24), new 範囲(0, -29)),
      new 防具("天使のﾛｰﾌﾞ", 15000, 70, new 範囲(34)),
      new 防具("ﾌﾞﾗｯﾄﾞﾒｲﾙ", 3500, new 範囲(180, 0, 180), 33),
      new 防具("ﾄﾞﾗｺﾞﾝﾒｲﾙ", 17500, 76, 30),
      new 防具("水の羽衣", 18500, new 範囲(79, 30), new 範囲(39)),
      new 防具("闇の衣", 19000, new 範囲(39), new 範囲(0, -39)),
      new 防具("炎の鎧", 22000, 90, 34),
      new 防具("光の鎧", 24000, new 範囲(109, 40), 32),
      new 防具("地獄の鎧", 6000, new 範囲(220, 0, 220), 44),
      new 防具("戦士のﾊﾟｼﾞｬﾏ", 2100, new 範囲(14, 5), new 範囲(0, -19)),
      new 防具("不思議なﾎﾞﾚﾛ", 7777, new 範囲(77, 0, 77), new 範囲(0, -77, 77)),
      new 防具("危ない水着", 12800, new 範囲(0, -29), new 範囲(0, -99)),
      new 防具("神秘の鎧", 25000, new 範囲(119, 70), new 範囲(20, 0, 10)),
      new 防具("ﾄﾞﾗｺﾞﾝﾛｰﾌﾞ", 27000, 100, new 範囲(49)),
      new 防具("天空の鎧", 30000, new 範囲(149, 100), 42),
      new 防具("魔人の鎧", 18000, new 範囲(300, 0, 300), 55),
      new 防具("王者のﾏﾝﾄ", 28000, new 範囲(149), new 範囲(39)),
      new 防具("ﾊｸﾞﾚﾒﾀﾙの鎧", 30000, 150, 45),
      new 防具("古びた鎧", 10, 1, 30),
      new 防具("騎士団の服", 1200, 32, new 範囲(13)),
      new 防具("ｼﾙﾊﾞｰﾒｲﾙ", 2400, 55, 17),
      new 防具("ﾗｲﾄｱｰﾏｰ", 4700, new 範囲(59, 25), 20),
      new 防具("あつでの鎧", 5000, 75, 40),
      new 防具("金の胸当て", 16000, 92, 40),
      new 防具("ﾌﾟﾗﾁﾅﾒｲﾙ", 20000, 95, 38),
      new 防具("盗賊の衣", 14000, new 範囲(19), new 範囲(0, -45, 5)),
      new 防具("紅蓮のﾛｰﾌﾞ", 28000, new 範囲(39), new 範囲(0, -56, 4)),
      new 防具("ﾄﾞﾗｺﾞﾝｱｰﾏｰ", 27000, 90, new 範囲(49)),
      new 防具("ｷﾞｶﾞﾝﾄｱｰﾏｰ", 30000, new 範囲(320, 0, 160), 60),
      new 防具("ﾒﾀﾙｷﾝｸﾞの鎧", 40000, 165, 50),
      new 防具("ﾛﾄの鎧", 50000, 180, 55),
      new 防具("竜神の鎧", 40000, new 範囲(225, 0, 25), new 範囲(70, 0, 5)),
      new 防具("竜神王の鎧", 50000, new 範囲(350, 0, 25), new 範囲(45, 0, 5)),

      // TODO
      new 戦闘時の道具("薬草", 30, (使用者, 対象者) => { new 回復スキル(使用者, 対象者, 属性.道具, 40); }),
      new 戦闘時の道具("上薬草", 100, (使用者, 対象者) => { new 回復スキル(使用者, 対象者, 属性.道具, 100); }),
      new 戦闘時の道具("特薬草", 300, (使用者, 対象者) => { new 回復スキル(使用者, 対象者, 属性.道具, 250); }),
      new 戦闘時の道具("賢者の石", 1500, (使用者) => { new 全体技(使用者, 回復スキル, 1, 属性.道具, 200); }),
      new 戦闘時の道具("世界樹のしずく", 5000, (使用者) => { new 全体技(使用者, 回復スキル, 1, 属性.道具, 999); }),
      new 戦闘時の道具("世界樹の葉", 5000, (使用者, 対象者) => { new 蘇生スキル(使用者, 対象者, 属性.道具, 1); }), // TODO テキスト
      new 戦闘時の道具("毒消し草", 20, (使用者, 対象者) => { new 状態異常回復スキル(使用者, 対象者, 属性.道具, "猛毒"); }),
      new 戦闘時の道具("満月草", 20, (使用者, 対象者) => { new 状態異常回復スキル(使用者, 対象者, 属性.道具, "麻痺"); }),
      new 戦闘時の道具("天使の鈴", 20, (使用者, 対象者) => { new 状態異常回復スキル(使用者, 対象者, 属性.道具, "混乱"); }),
      new 戦闘時の道具("ﾊﾟﾃﾞｷｱの根っこ", 250, (使用者, 対象者) => { new 状態異常回復スキル(使用者, 対象者, 属性.道具); }),
      new 戦闘時の道具("魔法の聖水", 500, (使用者, 対象者) => { new ＭＰ回復スキル(使用者, 対象者, 属性.道具, 40); }),
      new 戦闘時の道具("祈りの指輪", 2000, (使用者, 対象者) => { new ＭＰ回復スキル(使用者, 対象者, 属性.道具, 100); }),
      new 戦闘時の道具("ｴﾙﾌの飲み薬", 8000, (使用者, 対象者) => { new ＭＰ回復スキル(使用者, 対象者, 属性.道具, 999); }),
      new 戦闘時の道具("守りの石", 100, (使用者, 対象者) => { new 一時的状態スキル(使用者, 対象者, 属性.道具, "攻軽減"); }),
      new 戦闘時の道具("魔法の鏡", 300, (使用者, 対象者) => { new 一時的状態スキル(使用者, 対象者, 属性.道具, "魔反撃"); }),

      new ステータスの種("命の木の実", 500, 簡易ステータス.ＨＰ, new 範囲(6, 3)),
      new ステータスの種("不思議な木の実", 500, 簡易ステータス.ＭＰ, new 範囲(6, 3)),
      new ステータスの種("力の種", 500, 簡易ステータス.攻撃力, new 範囲(6, 1)),
      new ステータスの種("守りの種", 500, 簡易ステータス.守備力, new 範囲(6, 1)),
      new ステータスの種("素早さの種", 500, 簡易ステータス.素早さ, new 範囲(6, 1)),

      new 非戦闘時の道具("ｽｷﾙの種", 1000, () => {
        const 増加値 = new 範囲(3, 1).取得();
        あなた.メンバー.現職.SP増減(増加値);
        あなた.チャット書き込み予約(`${あなた}のSPが ${増加値} あがった！`);
        return true;
      }),
      new 非戦闘時の道具("幸せの種", 3000, () => {
        // TODO
        あなた.メンバー.経験値 = あなた.メンバー.レベル * あなた.メンバー.レベル * 10;
        あなた.チャット書き込み予約(`次のクエスト時にレベルアップ！`);
        return true;
      }),
      new 非戦闘時の道具("小さなﾒﾀﾞﾙ", 500, () => {
        あなた.メンバー._小さなメダル.収支(1);
        あなた.チャット書き込み予約("メダル王にメダルを１枚献上しました");
        return true;
      }),

      new 錬金素材("ﾓﾝｽﾀｰ銅貨", 1000),
      new 錬金素材("ﾓﾝｽﾀｰ銀貨", 3000),
      new 錬金素材("ﾓﾝｽﾀｰ金貨", 6000),

      new 転職アイテム("賢者の悟り", 10000),
      new 転職アイテム("勇者の証", 10000),
      new 転職アイテム("邪神像", 10000),
      new 転職アイテム("精霊の守り", 5000),
      new 転職アイテム("伯爵の血", 5000),
      new 転職アイテム("ﾏﾈﾏﾈの心", 5000),
      new 転職アイテム("ｽﾗｲﾑの心", 5000),
      new 転職アイテム("ﾊｸﾞﾚﾒﾀﾙの心", 8000),
      new 転職アイテム("ﾄﾞﾗｺﾞﾝの心", 5000),
      new 転職アイテム("闇のﾛｻﾞﾘｵ", 8000),
      new 転職アイテム("ｷﾞｻﾞｰﾙの野菜", 8000),
      new 転職アイテム("ｸﾎﾟの実", 5000),
      new 転職アイテム("ｷﾞｬﾝﾌﾞﾙﾊｰﾄ", 5000),
      new 転職アイテム("ｼﾞｪﾉﾊﾞ細胞", 10000),

      // TODO
      new 戦闘時の道具("ﾄﾞﾗｺﾞﾝ草", 150),
      new 戦闘時の道具("爆弾石", 300),

      new 変装用の道具("へんげの杖", 1000),
      new 変装用の道具("ﾋﾟﾝｸｽｶｰﾄ", 300, "chr/001.gif"),
      new 変装用の道具("ﾀﾝｸﾄｯﾌﾟﾊﾝﾏｰ", 300, "chr/005.gif"),
      new 変装用の道具("ﾁｮﾋﾞﾋｹﾞﾀｸｼｰﾄﾞ", 300), // TODO 性別で衣装が変わる
      new 変装用の道具("ﾈｺﾐﾐﾒｲﾄﾞ", 300, "chr/004.gif"),
      new 変装用の道具("ﾎﾋﾞｯﾄ", 300, "chr/014.gif"),
      new 変装用の道具("ﾊﾅﾒｶﾞﾈ", 300, "chr/021.gif"),
      new 変装用の道具("ぬいぐるみ", 300, "chr/023.gif"),
      new 変装用の道具("冒険家の衣装", 300, "chr/003.gif", "冒険家"),
      new 変装用の道具("騎士団の衣装", 300, "chr/015.gif", "騎士団"),
      new 変装用の道具("老人の衣装", 300, "chr/013.gif", "老人"),
      new 変装用の道具("精霊の衣装", 300, "chr/011.gif", "精霊"),
      new 変装用の道具("聖職者の衣装", 300, "聖職者"), // TODO 性別で衣装が変わる
      new 変装用の道具("王族の衣装", 300, "王様"), // TODO 性別で衣装が変わる

      new 非戦闘時の道具("ﾌｧｲﾄ一発", 3000, () => {
        あなた.メンバー._疲労 = 0;
        あなた.チャット書き込み予約(`元気全快！${あなた}の疲労が回復した！`);
      }),
      new 非戦闘時の道具("ｴｯﾁな本", 100, () => {
        あなた.メンバー._アイコン = 職業.一覧("遊び人").アイコン名を取得(性別);
        あなた._めっせーじ = "性格：ムッツリスケベ";
        あなた.チャット書き込み予約(`${あなた}はｴｯﾁな本をじっくり読んだ………<br />${あなた}の性格がムッツリスケベになった！`);
        ニュース.書き込み(`<span class="whisper">＠ささやき>全員 ${あなた}がムッツリスケベになりました！</span>`);
        // TODO プロフィールのキャラクターをムッツリスケベに
      }),
      new 非戦闘時の道具("天馬のたづな", 20000, () => {
        // TODO 多分チャット書かれない 
        あなた.チャット書き込み予約(`${あなた}は、天馬に乗り天界へと導かれた！`);
        あなた.場所移動(場所.一覧("天界"));
      }),

      new オーブ("ｼﾙﾊﾞｰｵｰﾌﾞ", 1000),
      new オーブ("ﾚｯﾄﾞｵｰﾌﾞ", 1000),
      new オーブ("ﾌﾞﾙｰｵｰﾌﾞ", 1000),
      new オーブ("ｸﾞﾘｰﾝｵｰﾌﾞ", 1000),
      new オーブ("ｲｴﾛｰｵｰﾌﾞ", 1000),
      new オーブ("ﾊﾟｰﾌﾟﾙｵｰﾌﾞ", 1000),

      new ステージ変更の道具("ﾗｰの鏡", 5000, 15),
      new ステージ変更の道具("ﾏﾀﾞﾑの招待状", 5000, 16),
      new ステージ変更の道具("宝の地図", 5000, 17),
      new ステージ変更の道具("闇のﾗﾝﾌﾟ", 5000, 18),
      new ステージ変更の道具("闇のｵｰﾌﾞ", 5000, 19),
      new ステージ変更の道具("天空の盾と兜", 5000, 20, () => あなた.武器名 === "天空の剣" && あなた.防具名 === "天空の鎧"),

      new 味方召喚用の道具("身代わり人形", 800, new NPCの味方("item/001.gif", 150, 999, 400, 50, 150)),
      new 味方召喚用の道具("身代わり石像", 1000, new NPCの味方("item/002.gif", 120, 300, 700, 900, 100)),
      new 味方召喚用の道具("身代わり騎士", 1200, new NPCの味方("item/003.gif", 300, 100, 999, 200, 100)),

      // TODO
      new 戦闘時の道具("妖精の笛"),
      new 戦闘時の道具("戦いのﾄﾞﾗﾑ"),
      new 戦闘時の道具("魔物のｴｻ"),
      new 戦闘時の道具("銀のたてごと"),
      new 戦闘時の道具("竜のｳﾛｺ"),
      new 戦闘時の道具("守りのﾙﾋﾞｰ"),
      new 戦闘時の道具("魔法の粉"),
      new 戦闘時の道具("悪魔の粉"),
      new 戦闘時の道具("ｷﾒﾗの翼"),
      new 戦闘時の道具("魔石のｶｹﾗ"),
      new 戦闘時の道具("悪魔のしっぽ"),
      new 戦闘時の道具("不思議なﾀﾝﾊﾞﾘﾝ"),
      new 戦闘時の道具("時の砂"),

      new 転職アイテム("魔銃", 5000),
      new 転職アイテム("禁じられた果実", 7000),
      new 転職アイテム("ｽﾗｲﾑﾋﾟｱｽ", 20000),
      new 転職アイテム("飛竜のﾋｹﾞ", 20000),
      new 転職アイテム("禁断の書", 18000),
      new 転職アイテム("ｺｳﾓﾘの羽", 15000),
      new 転職アイテム("ﾏｼﾞｯｸﾏｯｼｭﾙｰﾑ", 20000),
      new 転職アイテム("透明ﾏﾝﾄ", 20000),
      new 転職アイテム("獣の血", 18000),
      new 転職アイテム("死者の骨", 18000),
      new 転職アイテム("謎の液体", 15000),
      new 転職アイテム("ﾋｰﾛｰｿｰﾄﾞ", 20000),
      new 転職アイテム("ﾋｰﾛｰｿｰﾄﾞ2", 20000),

      // TODO
      new 戦闘時の道具("小人のﾊﾟﾝ", 950),
      new 戦闘時の道具("ﾘｼﾞｪﾈﾎﾟｰｼｮﾝ", 700),
      new 戦闘時の道具("復活の草", 2000),

      new ステージ変更の道具("次元のｶｹﾗ", 5000, 21),

      // TODO
      new 道具("幸せのくつ", 777),
      new 道具("金の鶏", 7000),
      new 道具("宝物庫の鍵"),

      new 転職アイテム("ﾁｮｺﾎﾞの羽", 20000),
      new 転職アイテム("ｲﾝﾃﾘﾒｶﾞﾈ", 10000),

      // TODO 戦闘システム作ってからじゃないとタイミングが不明
      new 装備系道具("ﾒｶﾞﾝﾃの腕輪", 500, undefined, (戦闘メンバー) => {
        // TODO
      }),
      new 装備系道具("幸せの帽子", 777, undefined, (戦闘メンバー) => {
        if (戦闘メンバー.は死んでいる())
          return;
        戦闘メンバー.ステータス.ＭＰ.現在値 += 整数乱数(13, 9, true);
      }),
      new 装備系道具("命の指輪", 1200, undefined, (戦闘メンバー) => {
        if (戦闘メンバー.は死んでいる())
          return;
        戦闘メンバー.ステータス.ＨＰ.現在値 += 整数乱数(17, 9, true);
      }),

      // TODO 以下2つはモシャス等後効果なし
      new 装備系道具("命のﾌﾞﾚｽﾚｯﾄ", 1100, ステータス.ＨＰ(100)),
      new 装備系道具("ｿｰｻﾘｰﾘﾝｸﾞ", 2000, ステータス.ＭＰ(100)),

      new 装備系道具("怒りのﾀﾄｩｰ", 2000, undefined, (戦闘メンバー) => {
        if (確率(2 / 3)) {
          return;
        }
        // TODO テンションの定義
        戦闘メンバー.テンション = 1.7;
        戦闘メンバー.一時的状態 = "２倍";
      }),
      new 装備系道具("ﾄﾞｸﾛの指輪", 666, new ステータス(0, 0, 30, 0, 30), (戦闘メンバー) => {
        戦闘メンバー.状態異常("動封");
      }),
      new 装備系道具("金のﾛｻﾞﾘｵ", 1100, ステータス.守備力(30)),
      new 装備系道具("金の指輪", 800, ステータス.守備力(15)),
      new 装備系道具("金のﾌﾞﾚｽﾚｯﾄ", 1500, ステータス.守備力(50)),
      new 装備系道具("はやてのﾘﾝｸﾞ", 1500, ステータス.素早さ(30)),
      new 装備系道具("ほしふる腕輪", 3000, ステータス.素早さ(60)),
      new 装備系道具("力の指輪", 1500, ステータス.攻撃力(20)),
      new 装備系道具("ごうけつの腕輪", 3000, ステータス.攻撃力(40)),
      new 装備系道具("ｱﾙｺﾞﾝﾘﾝｸﾞ", 6000, new ステータス(0, 0, 30, 0, 30)),

      // TODO 中身
      new 福袋("福袋", 1000, [1, 1, 1, 1, 1, 1, 7, 7, 8, 9, 10,]),
      new 福袋("幸福袋", 7000, [128, 129, 130, 131, 132, 133, 134, 128, 129, 130, 131, 132, 133, 134, 135, 136]),

      new 未読錬金レシピ("基本錬金ﾚｼﾋﾟ", 500, 0),
      new 未読錬金レシピ("応用錬金ﾚｼﾋﾟ", 2000, 1),
      new 未読錬金レシピ("神の錬金ﾚｼﾋﾟ", 7000, Infinity),

      new 非戦闘時の道具("馬のﾌﾝ", 1, () => { あなた.チャット書き込み予約(`${あなた}は馬のﾌﾝをにぎりしめた！………${あなた}は後悔した…`); return true; }),
      new 錬金素材("魔獣の皮", 500),
      new 錬金素材("魔除けの聖印", 800),
      new 錬金素材("聖者の灰", 1200),
      new 錬金素材("金塊", 10000),
      new 錬金素材("ｽﾗｲﾑの冠", 15000),
      new 錬金素材("ｵﾘﾊﾙｺﾝ", 20000),
      new 錬金素材("ﾛﾄの印", 30000),

      new 変装用の道具("ﾀｸｼｰﾄﾞ", "chr/027.gif", 500),
      new 変装用の道具("闇人の衣装", 600, "chr/025.gif", "闇人"),
      new 変装用の道具("英雄の衣装", 700, "英雄"), // TODO 性別に応じ
      new 変装用の道具("ﾓｼｬｽの巻物", 1500) // TODO ランダム
    ].map((_アイテム) => { アイテム.#IDから.set(_アイテム.ID, _アイテム); return [_アイテム.名前, _アイテム]; }, アイテム));
    // console.log(`アイテム総数: ${this.#一覧.size} 個(「なし」含む)`);
  }

  /**
   * 
   * @param {string} アイテム名 
   * @param {boolean} エラーを出す 
   * @returns {?アイテム}
   */
  static 一覧(アイテム名, エラーを出す = true) {
    return this.#一覧.get(アイテム名) ?? ((!エラーを出す || console.error(`アイテム「${アイテム名}」は存在しません`)) ? undefined : undefined);
  }

  static IDから(ID) {
    return アイテム.#IDから.get(ID);
  }

  static リスト(アイテム名リスト) {
    return new Set(アイテム名リスト.map(アイテム.一覧, アイテム));
  }

  _図鑑用出力(...出力) {
    return super._陳列用出力(undefined, 出力);
  }

  #ID;

  static #一覧;
  static #自動ID = 0;
  static #IDから;
}

class 武具インターフェース extends アイテム {
  constructor(名前, 価値, 強さ, 重さ) {
    super(名前, 価値);
    this.#強さ = 強さ;
    this.#重さ = 重さ;
  }

  使う() {
    通知欄.追加(this.ステータスを出力());
  }

  ステータスを出力(装備部位名 = this.constructor.name) {
    return `${装備部位名}名：${this.名前} / 強さ：<b>${this.強さ}</b> / 重さ：<b>${this.重さ}</b> / 価格：<b>${this.価値}</b>G`;
  }

  _陳列用出力(クリック時のこうどう名, 価格係数 = 1) {
    // TODO 強さ重さ価格は右揃え
    return super._陳列用出力(クリック時のこうどう名, this.名前, `${this.価値 * 価格係数} G`, this.強さ, this.重さ);
  }

  _図鑑用出力() {
    // TODO 強さ重さ価格は右揃え
    return super._図鑑用出力(this.名前, this.強さ, this.重さ, `${this.価値} G`);
  }

  get 強さ() { return this.#強さ.ランダム取得?.() ?? this.#強さ; }
  get 重さ() { return this.#重さ.ランダム取得?.() ?? this.#重さ; }

  static _陳列用ヘッダー項目名リスト = ["名前", "値段", "強さ", "重さ"];
  static _図鑑用ヘッダー項目名リスト = ["名前", "強さ", "重さ", "価格"];

  #強さ;
  #重さ;
}

export class 武器 extends 武具インターフェース {
  名前と個数出力(個数) {
    return アイテム.名前と個数出力(個数, "本", this.名前);
  }

  ステータスへ() {
    return new ステータス(0, 0, this.強さ, 0, -this.重さ);
  }
}

export class 防具 extends 武具インターフェース {
  名前と個数出力(個数) {
    return アイテム.名前と個数出力(個数, "着", this.名前);
  }

  ステータスへ() {
    return new ステータス(0, 0, 0, this.強さ, -this.重さ);
  }
}

export class 道具 extends アイテム {
  名前と個数出力(個数) {
    return アイテム.名前と個数出力(個数, "個", this.名前);
  }

  使う() {
    通知欄.追加(`${this.名前}はここでは使えません`);
    return false;
  }

  _陳列用出力(クリック時のこうどう名, 価格係数 = 1) {
    // TODO 価格は右揃え
    return super._陳列用出力(クリック時のこうどう名, this.名前, `${this.価値 * 価格係数} G`);
  }

  _図鑑用出力() {
    // TODO 価格は右揃え
    return super._図鑑用出力(this.名前, `${this.価値} G`);
  }

  static _陳列用ヘッダー項目名リスト = ["名前", "価格"];
  static _図鑑用ヘッダー項目名リスト = ["名前", "価格"];
}

class 使用可能な道具インターフェース extends 道具 {
  constructor(名前, 価値, 効果) {
    super(名前, 価値);
    if (効果 !== undefined)
      this._効果 = 効果;
  }
}

class 非戦闘時の道具 extends 使用可能な道具インターフェース {
  使う(タイミング) {
    if (タイミング !== 道具.タイミング.非戦闘時) {
      // TODO
      super.使う();
      return false;
    }
    // 確認(home.cgi)
    あなた.チャット書き込み予約(`${this.名前}をつかった！`);
    return this._効果();
  }
}

class ステータスの種 extends 非戦闘時の道具 {
  constructor(名前, 価値, 成長ステータス, 範囲) {
    super(名前, 価値);
    console.log();
    this.#成長ステータス名 = 成長ステータス.name;
    this.#成長ステータス = 成長ステータス;
    this.#範囲 = 範囲;
  }

  _効果() {
    // TODO 確認
    console.log(this.#成長ステータス.name);
    const 増加値 = this.#成長ステータス(this.#範囲.ランダム取得());
    あなた.ステータス.増減(増加値);
    あなた.チャット書き込み予約(`${あなた}の${this.#成長ステータス名}が ${増加値} あがった！`);
    return true;
  }

  #成長ステータス名;
  #成長ステータス;
  #範囲;
}

class 変装用の道具 extends 非戦闘時の道具 {
  constructor(名前, 価値, アイコン名, 姿の名前 = 名前) {
    super(名前, 価値);
    this.#アイコン名 = アイコン名;
    this.#姿の名前 = 姿の名前;
  }

  _効果() {
    あなた.メンバー._アイコン = this.#アイコン名;
    あなた.チャット書き込み予約(`${あなた}は${this.#姿の名前}のコスプレをした！`);
    return true;
  }

  #アイコン名;
  #姿の名前;
}

class オーブ extends 非戦闘時の道具 {
  constructor(名前, 価値) {
    super(名前, 価値);
  }

  _効果() {
    if (あなた.オーブを捧げる(this)) {
      あなた.チャット書き込み予約(`${this.名前}を復活の祭壇にささげた！`);
      return true;
    }
    else {
      通知欄.追加("すでにささげられています");
      return false;
    }
  }
}

class 福袋 extends 非戦闘時の道具 {
  constructor(名前, 価値, 中身名候補リスト) {
    super(名前, 価値);
    this.#中身名候補リスト = 中身名候補リスト;
  }

  _効果() {
    const 中身名 = ランダムな1要素(this.#中身名候補リスト);
    あなた.現在地.NPCに話させる(`なんと、${this.名前}の中身は ${中身名} だった！`);
    あなた.倉庫にアイテムを送る(中身名);
    return true;
  }

  #中身名候補リスト;
}

class 未読錬金レシピ extends 非戦闘時の道具 {
  constructor(名前, 価値, 難易度) {
    super(名前, 価値);
    this.#難易度 = 難易度;
  }

  _効果() {
    あなた.錬金レシピを登録(this.#難易度);
    return true;
  }

  #難易度;
}

class 戦闘時の道具 extends 使用可能な道具インターフェース {
  使う(タイミング, 対象) {
    if (タイミング !== 道具.タイミング.戦闘時) {
      // 確認(home.cgi)
      通知欄.追加(`${this.名前}は戦闘中でしか使えません`);
      return false;
    }
    return this._効果(対象);
  }
}

class ステージ変更の道具 extends 戦闘時の道具 {
  constructor(名前, 価値, ステージ番号, 追加条件) {
    super(名前, 価値)
    this.#ステージ番号 = ステージ番号;
    this.#追加条件 = 追加条件;
  }

  _効果() {
    if (vsモンスターでない || (this.#追加条件 && !this.#追加条件())) {
      通知欄.追加("しかし、何も起こらなかった…");
      return false;
    }
    あなた.クエスト.ステージ変更(this.#ステージ番号);
    return true;
  }

  #ステージ番号;
  #追加条件;
}

class 味方召喚用の道具 extends 戦闘時の道具 {
  constructor(名前, 価値, 召喚用データ) {
    super(名前, 価値);
    this.#召喚用データ = 召喚用データ;
  }

  _効果(使用者, 対象者) {
    if (あなた.クエスト.戦闘メンバー.一覧(味方召喚用の道具.#キャラクター名)) {
      あなた.チャット書き込み予約(`しかし、${this.名前}は消滅した…`);
    }
    else {
      使用者.現在地.メンバーを追加(召喚用データ.戦闘メンバーとして取得(味方召喚用の道具.#キャラクター名, 使用者));
    }
    return true;
  }

  #召喚用データ;

  static #キャラクター名 = "@ﾀﾞﾐｰ@";
}

class 装備系道具 extends 道具 {
  constructor(名前, 価値, ステータス, 追加効果) {
    super(名前, 価値);
    this.#ステータス = ステータス;
    this.#追加効果 = 追加効果;
  }

  _効果(戦闘メンバー) {
    if (this.#ステータス !== undefined) {
      戦闘メンバー.ステータス.増減(this.#ステータス);
    }
    this.#追加効果?.(戦闘メンバー);
    return true;
  }

  #ステータス;
  #追加効果;
}

class 錬金素材 extends 道具 {
  // とりあえず定義
}

class 転職アイテム extends 道具 {
  // とりあえず定義
}

class 進む人のステータス依存 {
  constructor(ステータス名, 倍率, 現在ステータスを参照する = false) {
    this.#ステータス名 = ステータス名;
    this.#倍率 = 倍率;
    // デフォルトに忠実
    this.#現在ステータスを参照する = 現在ステータスを参照する;
  }

  ランダム取得() {
    const ステータス = あなた.メンバー.ステータス[this.#ステータス名];
    return 整数乱数((
      (this.#現在ステータスを参照する) ? ステータス.現在値
        : ステータス.基礎値)
      * this.#倍率);
  }

  #ステータス名;
  #倍率;
  #現在ステータスを参照する;
}